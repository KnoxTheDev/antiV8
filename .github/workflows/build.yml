name: Build Custom V8 d8 for Windows (with Disassembler)

on:
  workflow_dispatch:

jobs:
  build-d8:
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install httplib2

      - name: Clone depot_tools and Set Up Environment
        run: |
          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git C:\depot_tools
          echo "C:\depot_tools" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          echo "DEPOT_TOOLS_WIN_TOOLCHAIN=0" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        shell: powershell

      - name: Fetch V8 Source Code
        run: |
          cd C:\
          fetch v8
        shell: powershell
        timeout-minutes: 120

      - name: Checkout Specific V8 Version (e.g., 11.4.183.29)
        run: |
          cd C:\v8
          git checkout refs/tags/11.4.183.29
        shell: powershell

      - name: Configure GN Build Arguments
        run: |
          cd C:\v8
          mkdir out\x64.debug
          @"
          is_debug = true
          is_component_build = true
          v8_enable_disassembler = true
          v8_enable_object_print = true
          v8_enable_verify_heap = true
          v8_monolithic = true
          target_cpu = ""x64""
          "@ | Out-File -FilePath out\x64.debug\args.gn -Encoding utf8
          Get-Content out\x64.debug\args.gn
        shell: powershell

      - name: Run gclient hooks
        run: |
          cd C:\v8
          python C:\depot_tools\gclient.py runhooks
        shell: powershell

      - name: Generate Ninja Build Files (gn gen)
        run: |
          cd C:\v8
          gn gen out\x64.debug
        shell: powershell

      - name: Build d8 Executable
        run: |
          cd C:\v8
          C:\depot_tools\autoninja.bat -C out\x64.debug d8
        shell: powershell
        timeout-minutes: 240

      - name: Locate and List d8.exe
        run: |
          Get-ChildItem -Path C:\v8\out\x64.debug -Filter "d8.exe" -Recurse
        shell: powershell

      - name: Upload d8.exe as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: v8-d8-windows-x64-debug
          path: C:\v8\out\x64.debug\d8.exe
          retention-days: 7
        if: success()
