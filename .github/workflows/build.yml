name: Build Custom V8 d8 for Windows (with Disassembler)

on:
  workflow_dispatch:

jobs:
  build-d8:
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install httplib2

      - name: Clone depot_tools and Configure Environment
        shell: powershell
        run: |
          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git C:\depot_tools
          "C:\depot_tools" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          "DEPOT_TOOLS_WIN_TOOLCHAIN=0" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Clone V8 from GitHub Mirror
        shell: powershell
        run: |
          git clone https://github.com/v8/v8.git C:\v8
          cd C:\v8
          git checkout 11.4.183.29

      - name: Create .gclient Configuration
        shell: powershell
        run: |
          Set-Content -Path C:\.gclient -Value @"
          solutions = [
            {
              "name": "v8",
              "url": "https://github.com/v8/v8.git",
              "deps_file": "DEPS",
              "managed": False,
              "custom_deps": {},
            },
          ]
          "@

      - name: Sync V8 Dependencies
        shell: powershell
        run: |
          cd C:\v8
          C:\depot_tools\gclient.py sync

      - name: Run gclient hooks (after sync)
        shell: powershell
        run: |
          cd C:\v8
          python C:\depot_tools\gclient.py runhooks

      - name: Configure GN Build Arguments
        shell: powershell
        run: |
          cd C:\v8
          mkdir -Force out\x64.debug
          @"
          is_debug = true
          is_component_build = true
          v8_enable_disassembler = true
          v8_enable_object_print = true
          v8_enable_verify_heap = true
          v8_monolithic = true
          target_cpu = "x64"
          use_clang_format = false
          "@ | Out-File -FilePath out\x64.debug\args.gn -Encoding utf8
          Get-Content out\x64.debug\args.gn

      - name: Generate Ninja Build Files
        shell: powershell
        run: |
          cd C:\v8
          gn gen out\x64.debug

      - name: Build d8 Executable
        shell: powershell
        run: |
          cd C:\v8
          C:\depot_tools\autoninja.bat -C out\x64.debug d8
        timeout-minutes: 240

      - name: Locate and List d8.exe
        shell: powershell
        run: |
          Get-ChildItem -Path C:\v8\out\x64.debug -Filter "d8.exe" -Recurse

      - name: Upload d8.exe as Artifact
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: v8-d8-windows-x64-debug
          path: C:\v8\out\x64.debug\d8.exe
          retention-days: 7
